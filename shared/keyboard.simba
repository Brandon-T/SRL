type
  TKeyboard = type TObject;

var
  Keyboard: TKeyboard;

procedure TKeyboard.PressKey(Key: Integer);
begin
  {$IFDEF SMART}
  if (Key = 13) then
    Key := 10;
  {$ENDIF}

  Self.KeyDown(Key);
  Wait(Trunc(srl.SkewedRand(60,45,180)));
  Self.KeyUp(Key);
end;

procedure TKeyboard.KeyDown(const Key: Integer);
begin
  System.KeyDown(Key);
end;

procedure TKeyboard.KeyUp(const Key: Integer);
begin
  System.KeyUp(Key);
end;

function TKeyboard.IsKeyDown(const Key: Integer): Boolean;
begin
  Result := System.IsKeyDown(Key);
end;

procedure TKeyboard.Send(const Text: String; const KeyWait, KeyModWait, KeyPressWait: UInt32); overload;
var
  i: UInt32;
begin
  for i := 1 to Length(Text) do
  begin
    SendKeys(Text[i], KeyWait, KeyModWait);
    Wait(KeyPressWait);
  end;
end;

procedure TKeyboard.Send(const Text: String); overload;
begin
  Self.Send(Text, Random(30, 60), Random(30, 60), Random(40, 85));
end;

procedure TKeyboard.Send(const Text: String; KeyPressAfter: Integer); overload;
begin
  Self.Send(Text);
  Wait(30, 120, wdLeft);
  Self.PressKey(KeyPressAfter);
end;
