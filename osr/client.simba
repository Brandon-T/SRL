(*
client
======
Refers to the oldschool runescape client. Stores somewhat misc methods that relates to client checks.
*)

(*
srl.IsLoggedIn
~~~~~~~~~~~~~~~~
.. pascal:: function TSRL.isLoggedIn(WaitTime: Int32 = 0): Boolean; overload;

Returns ``True`` if your character is logged in.
 By default it doesn't wait, but you can change ``WaitTime`` to whatever.
*)
function TSRL.isLoggedIn(WaitTime: Int32 = 0): Boolean; overload;
var
  t: UInt64;
begin
  Result := False;
  t := GetTickCount() + WaitTime;
  repeat
    if GetColor(443, 486) = $FFFFFF then
      Exit(True);
    Wait(50,100);
  until GetTickCount() >= t;
end;

(*
srl.isClientLoading
~~~~~~~~~~~~~~~~~~~~
.. pascal:: function TSRL.isClientLoading(WaitTime: Int32 = 0): Boolean;

Returns ``True`` if we are still waiting for the client to boot up.
*)
function TSRL.isClientLoading(WaitTime: Int32 = 0): Boolean;

  function isLoading: Boolean;
  var
    p: TPoint;
  begin
    Result := srl.FindText(p, 'lease wait', 'SmallChars07', clWhite, 0, Box(0, 0, 200, 50)) or
              srl.FindText(p, 'oading', 'SmallChars07', clWhite, 0, Box(0, 0, 200, 50));
  end;

var
  t: UInt64;
begin
  if (WaitTime = 0) then
    Exit(isLoading());

  t := GetTickCount() + WaitTime;
  repeat
    if (isLoading()) then
      Exit(True);

    Wait(Random(50, 100));
  until (GetTickCount() >= t);
end;

(*
srl.isClientLoading
~~~~~~~~~~~~~~~~~~~~
.. pascal:: function TSRL.WaitClientLoading: Boolean;

Waits forever, or until the client has successfully booted.
*)
function TSRL.WaitClientLoading: Boolean;
begin
  repeat
    Result := not Self.isClientLoading();
    Wait(Random(500, 1000));
  until Result;
end;

(*
srl.isClientReady
~~~~~~~~~~~~~~~~~~~~
.. pascal:: function TSRL.isClientReady(WaitTime: Int32 = 0): Boolean; overload;

Returns ``True`` if the client is ready to be used. 
If the client isn't ready it will wait, expecting it to get ready.
*)
function TSRL.isClientReady(WaitTime: Int32 = 0): Boolean; overload;
var
  T: UInt64;
  W, H: Int32;
begin
  GetClientDimensions(W, H);
  if (W < 765) or (H < 503) then
    Exit(False);

  T := GetTickCount() + WaitTime;
  repeat
    if Self.IsClientLoading() then
      Self.WaitClientLoading();
    if WorldSwitcher.isOpen() then
      WorldSwitcher.Close();

    if Self.isLoggedIn() or LoginScreen.isOpen() or Lobby.isOpen() then
      Exit(True);
  until (GetTickCount() >= T);
end;
