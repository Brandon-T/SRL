type
  EClickType = (ctNone, ctRed, ctYellow);

function TSRL.GetClickType(Area: TBox): EClickType;
var
  BMP: Int32;
  TPA: TPointArray;
  i, c, red, yellow: Integer;
begin
  Result := ctNone;
  Area.LimitTo(GetClientBounds);
  BMP := BitmapFromClient(Area);

  try
    if (FindColorsBitmap(BMP, TPA, 65536)) then
    begin
      red := 0;
      yellow := 0;

      for i := 0 to High(TPA) do
      begin
        c := FastGetPixel(BMP, Max(0, TPA[i].x-1), TPA[i].y);
        if (c = 65535) then
          Inc(Yellow)
        else if (c = 255) then
          Inc(Red);
        c := FastGetPixel(BMP, Min(Area.Width-1, TPA[i].x+1), TPA[i].y);
        if (c = 65535) then
          Inc(Yellow)
        else if (c = 255) then
          Inc(Red);
      end;

      if (Red > 5) and (Red > Yellow) then
        Result := ctRed;
      if (Yellow > 5) and (Yellow > Red) then
        Result := ctYellow;
    end;
  finally
    FreeBitmap(BMP);
  end;
end;

function TMouse.Click(Target: EClickType): Boolean; overload;
var
  p: TPoint;
  t: UInt64;
  ct: EClickType;
begin
  Result := False;

  Self.Click(mouse_Left);

  p := Self.GetPosition();
  t := GetTickCount64() + Random(250, 300);

  while (t > GetTickCount64()) do
  begin
    ct := srl.GetClickType(Box(p.x - 8, p.y - 8, p.x + 8, p.y + 8));
    if (ct <> ctNone) then
      Exit(ct = Target);

    Wait(Random(10, 25));
  end;
end;

function TSRL.GetXPAtLevel(level:Int32): Int32;
var
  total:Double;
  i:Int32;
begin
  for i:=1 to level-1 do
    total += Floor(i + 300 * 2 ** (i / 7));
  Result := Floor(total / 4);
end;

function TSRL.GetLevelAtXP(XP:UInt32): Int32;
var 
  total:Double;
begin
  while (total < XP*4+1) do
  begin  
    Inc(Result);
    total += Floor(Result + 300 * 2 ** (Result / 7));
  end;
end;

function TSRL.GetItemAmount(Area: TBox): Int32;
const
  TEXT_COLORS: TIntegerArray = [65535, 65278, 16777215, 8453888]; // Million = white | Billion = green etc.
var
  i: Integer;
  Text: String;
  b: TBox;
  TPA: TPointArray;
begin
  for i := 0 to High(TEXT_COLORS) do
    if (System.FindColors(TPA, TEXT_COLORS[i], Area.X1, Area.Y1, Area.X2, Area.Y2)) then
    begin
      b := GetTPABounds(TPA);
      b.Expand(2);
      b.LimitTo(GetClientBounds());

      Text := StringReplace(GetTextAtEx(b, 0, 3, 3, TEXT_COLORS[i], 5, 'StatChars07'), 'O', '0', [rfReplaceAll]);
      Result := StrToIntDef(ExtractFromStr(Text, Numbers), 0);

      if Pos('K', Text) > 0 then
        Result := Result * 1000;
      if Pos('M', Text) > 0 then
        Result := Result * 1000000;

      Exit;
    end;
end;

